services:
  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis:/data

  db:
    image: postgres:17.4
    ports:
      - "5432:5432"
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=race_simulation
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  race_simulator:
    build:
      context: backend
    entrypoint: python3 /backend/src/race_simulator.py
    restart: always
    volumes:
      - ./backend:/backend
    depends_on:
      - redis
      - db

  socketio:
    build:
      context: backend
    entrypoint: python3 /backend/src/socketio_room.py
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/backend
    depends_on:
      - redis
      - db

  backend:
    build:
      context: backend
    command: [ "sh", "/backend/docker/serve.sh" ]
    ports:
      - "8080:8080"
    volumes:
      - ./backend:/backend
    depends_on:
      - redis
      - db

  probability_calculator:
    build:
      context: backend
    entrypoint: python3 /backend/src/place_probabilities.py
    restart: always
    volumes:
      - ./backend:/backend
    depends_on:
      - redis
      - db

  migrations:
    profiles: [ "migration" ]
    build:
      context: backend
    command: [ "sh", "/backend/docker/migrate.sh" ]
    volumes:
      - ./backend:/backend
    depends_on:
      - db

  nginx:
    build:
      context: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./backend/static:/var/www/static
      - ./nginx/letsencrypt:/etc/letsencrypt
      - ./nginx/webroot:/var/www/certbot
    depends_on:
      - backend

  certbot:
    image: certbot/certbot:v3.2.0
    volumes:
      - ./nginx/letsencrypt:/etc/letsencrypt
      - ./nginx/webroot:/var/www/certbot
    depends_on:
      - nginx